% Humam Rashid
% Picat homework.
% CISC 7120X, Fall 2019.

main =>
    printf("sphere_volume(5) = %w\n", sphere_volume(5)),
    printf("quadratic_equation(2,5,2) = %w\n", quadratic_equation(2,5,2)),
    printf("number_of_zeroes([]) = %w\n", number_of_zeroes([])),
    printf("number_of_zeroes([1,2,3]) = %w\n", number_of_zeroes([1,2,3])),
    printf("number_of_zeroes([0,1,2,3]) = %w\n", number_of_zeroes([0,1,2,3])),
    printf("number_of_zeroes([1,0,2,0,3]) = %w\n",
        number_of_zeroes([1,0,2,0,3])),
    printf("number_of_zeroes([0,0,0,0]) = %w\n", number_of_zeroes([0,0,0,0])),
    printf("print_pascal(5):\n"), draw_pascal(15),
    printf("euler206():\n"), euler206().

% 1. volume of a sphere, given radius R.
sphere_volume(R) = (4 / 3) * pi * (R**3).

% 2. real roots of quadratic equation in the form ax^2 + bx + c = 0.
quadratic_equation(A, B, C) = [R1, R2] =>
    R1 = (-B + sqrt((B**2) - (4 * A * C))) / (2 * A),
    R2 = (-B - sqrt((B**2) - (4 * A * C))) / (2 * A).

% 3. number of zeroes in a list of numbers.
number_of_zeroes([]) = 0.
number_of_zeroes([H|T]) = N =>
    (H == 0 -> N = number_of_zeroes(T) + 1; N = number_of_zeroes(T)).

% 4. print N rows of Pascal's triangle.
draw_pascal(N) =>
    foreach (I in 0..N)
        Num := 1,
        printf("%*s", N-I, " "),
        foreach(K in 0..I)
            printf("%d ", Num),
            Num := Num * (I-K) div (K+1)
        end,
        nl
    end.

% find unique positive integer N whose square is 1_2_3_4_5_6_7_8_9_0 and each
% '_' is a single digit.
euler206() =>
    I = sqrt(19293949596979899).to_integer(),
    Found=fail,
    while (not Found)
        if ((I mod 10 == 3 || I mod 10 == 7) &&
            (I*I).to_string()=['1','_','2','_','3','_','4','_','5','_','6','_','7','_','8'|_])
            then
                writeln(I*10),
                Found := true
        else
            I := I-1
        end
    end.

% number of days between two dates given in some format.
days(Date1, Date2) = 1.

% EOF.
